#!/bin/bash

set -e

readonly SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly BASH_COMMONS_DIR="/opt/gruntwork/bash-commons"

if [[ ! -d "$BASH_COMMONS_DIR" ]]; then
  echo "ERROR: this script requires that bash-commons is installed in $BASH_COMMONS_DIR. See https://github.com/gruntwork-io/bash-commons for more info."
  exit 1
fi

source "$BASH_COMMONS_DIR/log.sh"
source "$BASH_COMMONS_DIR/assert.sh"
source "$BASH_COMMONS_DIR/string.sh"
source "$BASH_COMMONS_DIR/os.sh"
source "$BASH_COMMONS_DIR/file.sh"

readonly ENTERPRISE_EDITION="enterprise"
readonly COMMUNITY_EDITION="community"
readonly DEFAULT_EDITION="$ENTERPRISE_EDITION"

# Get these from the downloads section of the Couchbase website: https://www.couchbase.com/downloads
readonly DEFAULT_COUCHBASE_ENTERPRISE_VERSION="6.6.0"
readonly DEFAULT_COUCHBASE_ENTERPRISE_CHECKSUM_UBUNTU_18_04="8e7fd5434537094be2fbdfedf3ab5005f0f7d5b9d0578f59ce540b424215b728"
readonly DEFAULT_COUCHBASE_ENTERPRISE_CHECKSUM_UBUNTU_16_04="9f666b2e39c11b17a9cc74c00967d97efeab08e23b93e8bbdec582ce009c65c9"
readonly DEFAULT_COUCHBASE_ENTERPRISE_CHECKSUM_AMAZON_LINUX="91fd6bc72db44e59a12a2945944a698f782b621cf757ab95248f831a16b2c73a"

# Get these from the downloads section of the Couchbase website: https://www.couchbase.com/downloads
readonly DEFAULT_COUCHBASE_COMMUNITY_VERSION="6.5.1"
readonly DEFAULT_COUCHBASE_COMMUNITY_CHECKSUM_UBUNTU_18_04="c4951cdab01759020444e4648023721ae3a333257591252475d34d5fc6ac8857"
readonly DEFAULT_COUCHBASE_COMMUNITY_CHECKSUM_UBUNTU_16_04="baf65fb9cbcec87783d4e9c3ec067143a42cdeef13a884e1f917e8d2f14044b7"
readonly DEFAULT_COUCHBASE_COMMUNITY_CHECKSUM_AMAZON_LINUX="93a99222c2df857ebc08e60e85b5a3378b63d574ed24f33066542934ce60bf74"

readonly SHA256_CHECKSUM_TYPE="sha256"
readonly MD5_CHECKSUM_TYPE="md5"

readonly DEFAULT_SWAPPINESS="0"
readonly SWAPPINESS_CONFIG_FILE="/etc/sysctl.conf"
readonly DISABLE_THP_BOOT_SCRIPT="/etc/init.d/disable-thp"

readonly DEFAULT_COUCHBASE_DIR="/opt/couchbase"
readonly DEFAULT_COUCHBASE_BIN_DIR="$DEFAULT_COUCHBASE_DIR/bin"

readonly COUCHBASE_COMMONS_SRC_DIR="$SCRIPT_DIR/../couchbase-commons"
readonly COUCHBASE_COMMONS_INSTALL_DIR="/opt/couchbase-commons"

function print_usage {
  echo
  echo "Usage: install-couchbase-server [options]"
  echo
  echo "This script can be used to install Couchbase Server and its dependencies. This script has been tested with Ubuntu 16.04, 18.04, and Amazon Linux 2."
  echo
  echo "Options:"
  echo
  echo -e "  --edition\t\tThe edition of Couchbase to install. Must be one of: $ENTERPRISE_EDITION, $COMMUNITY_EDITION. Default: $DEFAULT_EDITION."
  echo -e "  --version\t\tThe version of Couchbase to install. Default: $DEFAULT_COUCHBASE_ENTERPRISE_VERSION."
  echo -e "  --checksum\t\tThe checksum of the Couchbase package. Required if --version is specified. You can get it from the downloads page of the Couchbase website."
  echo -e "  --checksum-type\tThe type of checksum in --checksum. Required if --version is specified. Must be one of: $SHA256_CHECKSUM_TYPE, $MD5_CHECKSUM_TYPE."
  echo -e "  --swappiness\t\tThe OS swappiness setting to use. Couchbase recommends setting this to 0. Default: $DEFAULT_SWAPPINESS."
  echo
  echo "Example:"
  echo
  echo "  install-couchbase-server --edition $DEFAULT_EDITION"
}

function install_couchbase_on_ubuntu {
  local readonly edition="$1"
  local readonly version="$2"
  local readonly checksum="$3"
  local readonly checksum_type="$4"
  local readonly ubuntu_version="$(lsb_release -r -s)"
  local readonly dpkg_name="couchbase-server.deb"

  log_info "Installing Couchbase $version ($edition edition) on Ubuntu $ubuntu_version"

  local readonly filepath="couchbase-server-${edition}_${version}-ubuntu${ubuntu_version}_amd64.deb"
  local readonly url="https://packages.couchbase.com/releases/$version/$filepath"

  # NOTE: Couchbase only started publishing Ubuntu 18.04 deb packages for Enterprise edition version 6.0.2, which means
  # that the vast majority of Couchbase server builds do not have official deb packages for 18.04. That said, the 16.04
  # package has been verified to work, so we will fallback to using that if the 18.04 build is not available.
  local readonly fallback_filepath="couchbase-server-${edition}_${version}-ubuntu16.04_amd64.deb"
  local readonly fallback_url="https://packages.couchbase.com/releases/$version/$fallback_filepath"

  log_info "Installing Couchbase dependencies"
  sudo DEBIAN_FRONTEND=noninteractive apt-get update
  sudo apt-get install -y python-httplib2 bzip2

  log_info "Downloading Couchbase from $url to $filepath"
  if [[ "$(curl --location --silent --fail --show-error -o "$dpkg_name" -w "%{http_code}" "$url")" == "404" ]]; then
    log_warn "Failed to get Couchbase from $url. Trying $fallback_url."
    curl --location --silent --fail --show-error -o "$dpkg_name" "$fallback_url"
  fi

  os_validate_checksum "$dpkg_name" "$checksum" "$checksum_type"

  # Install Couchbase, but configure it to NOT start on boot. This allows the run-couchbase-server script to configure
  # Couchbase, including what ports to use, and THEN boot it up.
  log_info "Installing Couchbase from $dpkg_name"
  sudo INSTALL_DONT_START_SERVER=1 dpkg -i "$dpkg_name"
  sudo systemctl disable couchbase-server

  log_info "Cleaning up $dpkg_name"
  rm -f "$dpkg_name"
}

function install_couchbase_on_amazon_linux {
  local readonly edition="$1"
  local readonly version="$2"
  local readonly checksum="$3"
  local readonly checksum_type="$4"
  local readonly base_os_version="$5"

  log_info "Installing Couchbase $version ($edition edition) on Amazon Linux"

  local readonly filepath="couchbase-server-${edition}-${version}-${base_os_version}.x86_64.rpm"
  local readonly url="https://packages.couchbase.com/releases/$version/$filepath"

  log_info "Installing Couchbase dependencies"
  sudo yum update -y
  sudo yum install -y openssl bzip2

  log_info "Downloading Couchbase from $url to $filepath"
  curl --location --silent --fail --show-error -O "$url"

  os_validate_checksum "$filepath" "$checksum" "$checksum_type"

  # Install Couchbase, but configure it to NOT start on boot. This allows the run-couchbase-server script to configure
  # Couchbase, including what ports to use, and THEN boot it up.
  log_info "Installing Couchbase from $filepath"
  sudo INSTALL_DONT_START_SERVER=1 rpm --install "$filepath"
  sudo chkconfig couchbase-server off

  log_info "Cleaning up $filepath"
  rm -f "$filepath"

  # Workaround for https://github.com/gruntwork-io/terraform-aws-couchbase/issues/33
  log_info "Creating symlink for libtinfo"
  sudo ln -s /usr/lib64/libtinfo.so.6 /usr/lib64/libtinfo.so.5
}

# Disabling transparent huge pages is recommended for Couchbase servers.
# https://developer.couchbase.com/documentation/server/current/install/thp-disable.html
function disable_transparent_huge_pages {
  log_info "Adding boot script $DISABLE_THP_BOOT_SCRIPT to disable transparent huge pages"
  sudo cp "$SCRIPT_DIR/disable-thp" "$DISABLE_THP_BOOT_SCRIPT"
  sudo chmod 755 "$DISABLE_THP_BOOT_SCRIPT"

  if os_is_ubuntu; then
    sudo update-rc.d disable-thp defaults
  elif os_is_amazon_linux; then
    sudo chkconfig disable-thp on
  else
    log_error "This script only supports Ubuntu 16.04, 18.04, and Amazon Linux 2."
    exit 1
  fi
}

# A swappiness of 0 or 1 is recommended for Couchbase servers.
# https://developer.couchbase.com/documentation/server/current/install/install-swap-space.html
function update_swappiness {
  local readonly swappiness="$1"

  log_info "Updating OS swappiness settings to $swappiness in $SWAPPINESS_CONFIG_FILE"

  file_replace_or_append_text "^vm.swappiness.*=.*$" "vm.swappiness = $swappiness" "$SWAPPINESS_CONFIG_FILE"
}

function install_couchbase_scripts {
  local readonly dest_dir="$1"

  local readonly run_couchbase_src="$SCRIPT_DIR/../run-couchbase-server/run-couchbase-server"
  local readonly run_couchbase_dest="$dest_dir/run-couchbase-server"
  log_info "Copying $run_couchbase_src to $run_couchbase_dest"
  sudo cp "$run_couchbase_src" "$run_couchbase_dest"
  sudo chmod +x "$run_couchbase_dest"

  local readonly run_replication_src="$SCRIPT_DIR/../run-replication/run-replication"
  local readonly run_replication_dest="$dest_dir/run-replication"
  log_info "Copying $run_replication_src to $run_replication_dest"
  sudo cp "$run_replication_src" "$run_replication_dest"
  sudo chmod +x "$run_replication_dest"
}

function install_couchbase_commons {
  local readonly src_dir="$1"
  local readonly dest_dir="$2"

  log_info "Copying $src_dir to $dest_dir"
  sudo cp -r "$src_dir" "$dest_dir"
}

function install {
  local edition="$DEFAULT_EDITION"
  local version
  local checksum
  local checksum_type
  local swappiness="$DEFAULT_SWAPPINESS"

  while [[ $# > 0 ]]; do
    local key="$1"

    case "$key" in
      --edition)
        assert_not_empty "$key" "$2"
        assert_value_in_list "$key" "$2" "$ENTERPRISE_EDITION" "$COMMUNITY_EDITION"
        edition="$2"
        shift
        ;;
      --version)
        assert_not_empty "$key" "$2"
        version="$2"
        shift
        ;;
      --checksum)
        assert_not_empty "$key" "$2"
        checksum="$2"
        shift
        ;;
      --checksum-type)
        assert_not_empty "$key" "$2"
        assert_value_in_list "$key" "$2" "$SHA256_CHECKSUM_TYPE" "$MD5_CHECKSUM_TYPE"
        checksum_type="$2"
        shift
        ;;
      --swappiness)
        assert_not_empty "$key" "$2"
        swappiness="$2"
        shift
        ;;
      --help)
        print_usage
        exit
        ;;
      *)
        log_error "Unrecognized argument: $key"
        print_usage
        exit 1
        ;;
    esac

    shift
  done

  assert_is_installed "curl"

  if [[ ! -z "$version" && (-z "$checksum" || -z "$checksum_type") ]]; then
    log_error "You must specify the --checksum and --checksum-type parameters when specifying the --version parameter. You can find the checksums on the Couchbase downloads page."
    exit 1
  fi

  if [[ -z "$version" ]]; then
    if [[ "$edition" == "$COMMUNITY_EDITION" ]]; then
      version="$DEFAULT_COUCHBASE_COMMUNITY_VERSION"
      checksum_type="$SHA256_CHECKSUM_TYPE"
      if os_is_ubuntu "16.04"; then
        checksum="$DEFAULT_COUCHBASE_COMMUNITY_CHECKSUM_UBUNTU_16_04"
      elif os_is_ubuntu "18.04"; then
        checksum="$DEFAULT_COUCHBASE_COMMUNITY_CHECKSUM_UBUNTU_18_04"
      else
        checksum="$DEFAULT_COUCHBASE_COMMUNITY_CHECKSUM_AMAZON_LINUX"
      fi
    else
      version="$DEFAULT_COUCHBASE_ENTERPRISE_VERSION"
      checksum_type="$SHA256_CHECKSUM_TYPE"
      if os_is_ubuntu "16.04"; then
        checksum="$DEFAULT_COUCHBASE_ENTERPRISE_CHECKSUM_UBUNTU_16_04"
      elif os_is_ubuntu "18.04"; then
        checksum="$DEFAULT_COUCHBASE_ENTERPRISE_CHECKSUM_UBUNTU_18_04"
      else
        checksum="$DEFAULT_COUCHBASE_ENTERPRISE_CHECKSUM_AMAZON_LINUX"
      fi
    fi
  fi

  log_info "Starting Couchbase install..."

  if os_is_ubuntu "16.04" || os_is_ubuntu "18.04"; then
    install_couchbase_on_ubuntu "$edition" "$version" "$checksum" "$checksum_type"
  elif os_is_amazon_linux "2"; then
    [[ $version > 5.1.1 ]] && base_os_version="amzn2" || base_os_version="centos6"
    install_couchbase_on_amazon_linux "$edition" "$version" "$checksum" "$checksum_type" "$base_os_version"
  else
    log_error "This script only supports Ubuntu 16.04 and Amazon Linux 2."
    exit 1
  fi

  update_swappiness "$swappiness"
  disable_transparent_huge_pages
  install_couchbase_scripts "$DEFAULT_COUCHBASE_BIN_DIR"
  install_couchbase_commons "$COUCHBASE_COMMONS_SRC_DIR" "$COUCHBASE_COMMONS_INSTALL_DIR"

  log_info "Couchbase installed successfully!"
}

install "$@"
